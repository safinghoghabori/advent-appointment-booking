// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using advent_appointment_booking.Database;

#nullable disable

namespace advent_appointment_booking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241002093744_AddNewFieldForTerminalTable")]
    partial class AddNewFieldForTerminalTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("advent_appointment_booking.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentLastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AppointmentValidThrough")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChassisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("GateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TerminalId")
                        .HasColumnType("int");

                    b.Property<int>("TrCompanyId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DriverId");

                    b.HasIndex("TerminalId");

                    b.HasIndex("TrCompanyId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrCompanyId")
                        .HasColumnType("int");

                    b.HasKey("DriverId");

                    b.HasIndex("TrCompanyId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Terminal", b =>
                {
                    b.Property<int>("TerminalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminalId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TerminalName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TerminalId");

                    b.ToTable("Terminals");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.TruckingCompany", b =>
                {
                    b.Property<int>("TrCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrCompanyId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GstNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrCompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TransportLicNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TrCompanyId");

                    b.ToTable("TruckingCompanies");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Appointment", b =>
                {
                    b.HasOne("advent_appointment_booking.Models.Driver", "Driver")
                        .WithMany("Appointments")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("advent_appointment_booking.Models.Terminal", "Terminal")
                        .WithMany("Appointments")
                        .HasForeignKey("TerminalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("advent_appointment_booking.Models.TruckingCompany", "TruckingCompany")
                        .WithMany("Appointments")
                        .HasForeignKey("TrCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Terminal");

                    b.Navigation("TruckingCompany");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Driver", b =>
                {
                    b.HasOne("advent_appointment_booking.Models.TruckingCompany", "TruckingCompany")
                        .WithMany("Drivers")
                        .HasForeignKey("TrCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TruckingCompany");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Driver", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.Terminal", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("advent_appointment_booking.Models.TruckingCompany", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Drivers");
                });
#pragma warning restore 612, 618
        }
    }
}
